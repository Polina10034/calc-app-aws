import * as React from "react";
import { useState } from "react";
import FileUpload from "@cloudscape-design/components/file-upload";
import FormField from "@cloudscape-design/components/form-field";
import Header from "@cloudscape-design/components/header";
import Form from "@cloudscape-design/components/form";
import SpaceBetween from "@cloudscape-design/components/space-between";
import Button from "@cloudscape-design/components/button";
import Container from "@cloudscape-design/components/container";
import Input from "@cloudscape-design/components/input";
import { fileService } from "../service/fileService";


export default () => {
  const [accountId, setAccountId] = useState("")
  const [files, setfile] = useState([]);

  let handleSubmit = async (e) => {
    e.preventDefault();
    try {
      console.log(accountId)
      console.log(files);
      // fileService.getHello();
      // fileService.getPricingRsults('3222222222')999777999 
      fileService.uploadFiles(files, files, accountId).then(res => {
        // console.log(res);
        if (res === 'ok') {
          setAccountId("");
          setfile([]);
          // setMessage("User created successfully");
        } else {
          alert("Some error occured");
          console.log(res)
        }

      } )
      
    } catch (err) {
      console.log(err);
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      <Form
        actions={
          <SpaceBetween direction="horizontal" size="xs">
            <Button formAction="none" variant="link">
              Cancel
            </Button>
            <Button variant="primary">Submit</Button>
          </SpaceBetween>
        }
        header={<Header variant="h1">Analyze Workload Costs</Header>}
      >
        <Container
          header={
            <Header variant="h2">
              Upload Cost and Usage report
            </Header>
          }
        >
          <SpaceBetween direction="vertical" size="l">
            <FormField label="AWS Account ID" >
              <Input 
              onChange={({ detail }) => setAccountId(detail.value)}
              value={accountId}
              placeholder="123456778"
              />
            </FormField>
                <FormField
                label="Select a file"
                description="Please upload a file generated by AWS Cost and Usage Report"
                >
                <FileUpload
                    onChange={({ detail }) => setfile(detail.value)}
                    value={files}
                    i18nStrings={{
                    uploadButtonText: e =>
                        e ? "Choose files" : "Choose file",
                    dropzoneText: e =>
                        e
                        ? "Drop files to upload"
                        : "Drop file to upload",
                    removeFileAriaLabel: e =>
                        `Remove file ${e + 1}`,
                    limitShowFewer: "Show fewer files",
                    limitShowMore: "Show more files",
                    errorIconAriaLabel: "Error"
                    }}
                    showFileLastModified
                    showFileSize
                    showFileThumbnail
                    tokenLimit={3}
                    constraintText="Supported formats are: .parquet "
                />
                </FormField>
          </SpaceBetween>
        </Container>
      </Form>
    </form>
  );
}